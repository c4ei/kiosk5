<!DOCTYPE html>
<html lang="th">

<head>
    <%- include('Include/Head.ejs') %>
    <!-- manifest -->
    <link rel="manifest" href="/manifest.json">
</head>

<body class="hold-transition login-page">
    <%- include('Include/Preloader.ejs') %>
    <div class="login-box">
        <div class="card">
            <div class="card-header text-center">
                <img src="https://cdn.jsdelivr.net/gh/newzydev/POSMS-NodeJS-Express-EJS-MySQL@main/Public/assets/images/logo/logo_icon.png?v=<%= sys_version %>" alt="Logo Point of Sale Management System" width="15%" loading="lazy">
            </div>
            <div class="card-body login-card-body">
                <div class="login-box-msg">
                    ยินดีต้อนรับเข้าสู่ <b><%= settings.store_name %></b><br>
                    ลงชื่อเข้าใช้ระบบเพื่อเริ่มเซสชั่นของคุณ<br>
                    ป้อน <b>ชื่อผู้ใช้</b> และ <b>รหัสผ่าน</b>
                </div>
                
                <% if (error) { %>
                <div class="alert alert-danger text-center" role="alert">
                    <span><i class="fas fa-exclamation-triangle mr-2"></i><%= error %>
                </div>
                <% } %>
                <% if (success) { %>
                <div class="alert alert-success text-center" role="alert">
                    <span><i class="fas fa-check-circle mr-2"></i><%= success %>
                </div>
                <% } %>
                
                <form class="needs-validation" novalidate id="login_form" method="POST">
                    <div class="row">
                        <div class="col-12 mb-3">
                            <label for="member_username" class="required">ชื่อผู้ใช้</label>
                            <input type="email" class="form-control form-control-lg" name="member_username" id="member_username" placeholder="example@pos" value="<%= formData ? formData.member_username : '' %>" autofocus autocomplete="off" required>
                            <div class="valid-feedback">
                                กรอกชื่อผู้ใช้ถูกต้อง
                            </div>
                            <div class="invalid-feedback">
                                กรุณากรอกชื่อผู้ใช้ให้ถูกต้อง
                            </div>
                        </div>
                        <div class="col-12">
                            <label for="member_password" class="required">รหัสผ่าน</label>
                            <input type="password" class="form-control form-control-lg" name="member_password" id="member_password" placeholder="example@pos" value="<%= formData ? formData.member_password : '' %>" autofocus autocomplete="off" required>
                            <div class="valid-feedback">
                                กรอกรหัสผ่านถูกต้อง
                            </div>
                            <div class="invalid-feedback">
                                กรุณากรอกรหัสผ่านให้ถูกต้อง
                            </div>
                        </div>
                    </div>
                    <hr>
                    <div class="row">
                        <div class="col-12 mb-3">
                            <button type="submit" id="login_submit" class="btn btn-custom-one btn-lg btn-anti btn-block">ลงชื่อเข้าใช้</button>
                        </div>
                        <div class="col-12 mb-3">
                            <div class="btn btn-custom-two btn-lg btn-anti btn-block" onclick="location.href='/Register';">สมัครสมาชิกกับเรา</div>
                        </div>
                        <div class="col-12 mb-3">
                            <div class="btn btn-custom-two btn-lg btn-anti btn-block" onclick="location.href='/Forgot_Account';">ลืมชื่อผู้ใช้ หรือ รหัสผ่าน?</div>
                        </div>
                        <div class="col-12">
                            <div class="btn btn-lg btn-block" data-toggle="modal" data-target="#Store_Information"><i class="fas fa-info-circle mr-2"></i>เกี่ยวกับร้านค้า</div>
                        </div>
                </form>
            </div>
        </div>
    </div>

    <%- include('Include/Javascript.ejs') %>
    <script>
        let deferredPrompt;
    
        // ลงทะเบียน Service Worker เมื่อโหลดหน้าเว็บ
        if ('serviceWorker' in navigator) {
            window.addEventListener('load', () => {
                navigator.serviceWorker.register('/service-worker.js').then((registration) => {
                    console.log('Service Worker registered with scope:', registration.scope);
                }).catch((error) => {
                    console.log('Service Worker registration failed:', error);
                });
            });
        }
    
        // จัดการเหตุการณ์ก่อนการติดตั้ง PWA
        window.addEventListener('beforeinstallprompt', (e) => {
            e.preventDefault(); // ป้องกันการแสดงแถบติดตั้งเริ่มต้น
            deferredPrompt = e; // เก็บเหตุการณ์เพื่อเรียกใช้งานภายหลัง
    
            // ตรวจสอบว่า hostname ไม่ใช่ localhost และเรียกใช้ prompt ติดตั้งอัตโนมัติ
            if (window.location.hostname !== 'localhost') {
                promptInstallPWA();
            }
        });
    
        // ฟังก์ชันติดตั้ง PWA อัตโนมัติหรือเมื่อคลิกปุ่ม
        function promptInstallPWA() {
            if (deferredPrompt) {
                deferredPrompt.prompt(); // แสดง prompt
                deferredPrompt.userChoice.then((choiceResult) => {
                    console.log(`User response to the install prompt: ${choiceResult.outcome}`);
                    deferredPrompt = null; // รีเซ็ตค่า deferredPrompt
                });
            } else {
                console.log('Cannot prompt install; deferredPrompt is not available');
            }
        }
    
        // เรียกใช้ฟังก์ชัน promptInstallPWA เมื่อผู้ใช้คลิกปุ่ม
        document.getElementById('install_posms_app_button').addEventListener('click', (e) => {
            e.preventDefault();
            promptInstallPWA(); // เรียกใช้การติดตั้ง PWA เมื่อคลิกปุ่ม
        });
    
        // แจ้งเตือนเมื่อแอปติดตั้งเสร็จสิ้น
        window.addEventListener('appinstalled', () => {
            console.log('PWA has been installed');
        });
    
        // จัดการการคลิกปุ่มล้างแคช
        document.getElementById('clear_cache_button').addEventListener('click', () => {
            if ('caches' in window) {
                caches.keys().then((cacheNames) => {
                    return Promise.all(
                        cacheNames.map((cacheName) => {
                            return caches.delete(cacheName);
                        })
                    );
                }).then(() => {
                    if (navigator.serviceWorker.controller) {
                        navigator.serviceWorker.controller.postMessage({ action: 'skipWaiting' });
                    }
                    location.reload(); // รีโหลดหน้าเว็บ
                }).catch((error) => {
                    console.error('Error clearing caches:', error);
                });
            } else {
                console.log('Caches API is not supported');
            }
        });
    </script>
</body>

</html>