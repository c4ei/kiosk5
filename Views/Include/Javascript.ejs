<!-- jQuery -->
<script src="https://cdn.jsdelivr.net/gh/newzydev/POSMS-NodeJS-Express-EJS-MySQL@commit-hash/Public/assets/plugins/jquery/jquery.min.js"></script>
<!-- jQuery UI 1.11.4 -->
<script src="https://cdn.jsdelivr.net/gh/newzydev/POSMS-NodeJS-Express-EJS-MySQL@commit-hash/Public/assets/plugins/jquery-ui/jquery-ui.min.js"></script>
<!-- Bootstrap 4 -->
<script src="https://cdn.jsdelivr.net/gh/newzydev/POSMS-NodeJS-Express-EJS-MySQL@commit-hash/Public/assets/plugins/bootstrap/js/bootstrap.bundle.min.js"></script>
<!-- ChartJS -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<!-- Tempusdominus Bootstrap 4 -->
<script src="https://cdn.jsdelivr.net/gh/newzydev/POSMS-NodeJS-Express-EJS-MySQL@commit-hash/Public/assets/plugins/tempusdominus-bootstrap-4/js/tempusdominus-bootstrap-4.min.js"></script>
<!-- overlay Scrollbars -->
<script src="https://cdn.jsdelivr.net/gh/newzydev/POSMS-NodeJS-Express-EJS-MySQL@commit-hash/Public/assets/plugins/overlayScrollbars/js/jquery.overlayScrollbars.min.js"></script>
<!-- Summernote -->
<script src="https://cdn.jsdelivr.net/gh/newzydev/POSMS-NodeJS-Express-EJS-MySQL@commit-hash/Public/assets/plugins/summernote/summernote-bs4.min.js"></script>
<!-- AdminLTE App -->
<script src="https://cdn.jsdelivr.net/gh/newzydev/POSMS-NodeJS-Express-EJS-MySQL@commit-hash/Public/assets/dist/js/adminlte.min.js"></script>
<!-- JSBarCode -->
<script src="https://cdn.jsdelivr.net/npm/jsbarcode@3.11.6/dist/JsBarcode.all.min.js"></script>
<script type="text/javascript">
    JsBarcode(".barcode").init();
</script>
<!-- Script main -->
<script src="https://cdn.jsdelivr.net/gh/newzydev/POSMS-NodeJS-Express-EJS-MySQL@commit-hash/Public/assets/js/Javascript.js"></script>
<!-- Newzydev Protect -->
<script src="https://cdn.jsdelivr.net/gh/newzydev/POSMS-NodeJS-Express-EJS-MySQL@commit-hash/Public/assets/js/Newzydev-Protect.js"></script>
<script>
    (function () {
        'use strict';
        window.addEventListener('load', function () {
            // Get the forms we want to apply custom Bootstrap validation styles to
            var forms = document.getElementsByClassName('needs-validation');
            // Loop over them and prevent submission
            Array.prototype.filter.call(forms, function (form) {
                form.addEventListener('submit', function (event) {
                    if (form.checkValidity() === false) {
                        event.preventDefault();
                        event.stopPropagation();
                    }
                    form.classList.add('was-validated');
                }, false);
            });
        }, false);
    })();
</script>
<script>
    let deferredPrompt;

    // ลงทะเบียน Service Worker เมื่อโหลดหน้าเว็บ
    if ('serviceWorker' in navigator) {
        window.addEventListener('load', () => {
            navigator.serviceWorker.register('/service-worker.js').then((registration) => {
                console.log('Service Worker registered with scope:', registration.scope);
            }).catch((error) => {
                console.log('Service Worker registration failed:', error);
            });
        });
    }

    // จัดการเหตุการณ์ก่อนการติดตั้ง PWA
    window.addEventListener('beforeinstallprompt', (e) => {
        e.preventDefault(); // ป้องกันการแสดงแถบติดตั้งเริ่มต้น
        deferredPrompt = e; // เก็บเหตุการณ์เพื่อเรียกใช้งานภายหลัง

        // ตรวจสอบว่า hostname ไม่ใช่ localhost และเรียกใช้ prompt ติดตั้งอัตโนมัติ
        if (window.location.hostname !== 'localhost') {
            promptInstallPWA();
        }
    });

    // ฟังก์ชันติดตั้ง PWA อัตโนมัติหรือเมื่อคลิกปุ่ม
    function promptInstallPWA() {
        if (deferredPrompt) {
            deferredPrompt.prompt(); // แสดง prompt
            deferredPrompt.userChoice.then((choiceResult) => {
                console.log(`User response to the install prompt: ${choiceResult.outcome}`);
                deferredPrompt = null; // รีเซ็ตค่า deferredPrompt
            });
        } else {
            console.log('Cannot prompt install; deferredPrompt is not available');
        }
    }

    // เรียกใช้ฟังก์ชัน promptInstallPWA เมื่อผู้ใช้คลิกปุ่ม
    document.getElementById('install_posms_app_button').addEventListener('click', (e) => {
        e.preventDefault();
        promptInstallPWA(); // เรียกใช้การติดตั้ง PWA เมื่อคลิกปุ่ม
    });

    // แจ้งเตือนเมื่อแอปติดตั้งเสร็จสิ้น
    window.addEventListener('appinstalled', () => {
        console.log('PWA has been installed');
    });

    // จัดการการคลิกปุ่มล้างแคช
    document.getElementById('clear_cache_button').addEventListener('click', () => {
        if ('caches' in window) {
            caches.keys().then((cacheNames) => {
                return Promise.all(
                    cacheNames.map((cacheName) => {
                        return caches.delete(cacheName);
                    })
                );
            }).then(() => {
                if (navigator.serviceWorker.controller) {
                    navigator.serviceWorker.controller.postMessage({ action: 'skipWaiting' });
                }
                location.reload(); // รีโหลดหน้าเว็บ
            }).catch((error) => {
                console.error('Error clearing caches:', error);
            });
        } else {
            console.log('Caches API is not supported');
        }
    });
</script>
